---
title: "Analysis of Big Tech Stock Prices"
subtitle: "INFO 523 - Spring 2023 - Project 1"
author: "Christian Ortmann, Roxana Akbarsharifi, Abhishek Kumar, Shashank Yadav, Gorantla Sai Laasya, Divya Liladhar Dhole"
title-slide-attributes:
  data-background-image: images/stock_market.jpeg
  data-background-size: stretch
  data-background-opacity: "0.5"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
editor: visual
jupyter: python3
execute:
  echo: false
---

```{python}
#| label: load-packages
#| include: false

# Load packages here
import pandas as pd
import seaborn as sns

```

```{python}
#| label: setup
#| include: false
#| 
# Set up plot theme and figure resolution
sns.set_theme(style="whitegrid")
sns.set_context("notebook", font_scale=1.1)

import matplotlib.pyplot as plt
plt.rcParams['figure.dpi'] = 300
plt.rcParams['savefig.dpi'] = 300
plt.rcParams['figure.figsize'] = (6, 6 * 0.618)
```

```{python}
#| label: load-data
#| include: false
# Load data in Python

```

## Introducing the Dataset
::: {.fragment .fade-in}
- Data was sourced from Tidy Tuesday, which pulled from Kaggle
:::
::: {.fragment .fade-in}
- Dataset consists of 14 Big Tech stocks and their respective economic metrics from 2010 to 2022
:::
::: {.fragment .fade-in}
- Contains some missing data points where companies were listed after 2010
:::
::: {.fragment .fade-in}
- Motivated to make low risk financial decision by analyzing past stock market trends
:::

## Question 1: How do stock prices change over time based on basic economic metrics {.smaller}
```{python}
# Importing the required libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.graph_objects as go
from scipy import stats

# Loading Data
stocks = pd.read_csv('data/big_tech_stock_prices.csv')
companies = pd.read_csv('data/big_tech_companies.csv')

# Step 1: Exploratory Data Analysis (EDA)
df = stocks.copy()

# Convert the date column to datetime format
df['date'] = pd.to_datetime(df['date'])

# Summary Statistics
company_stats = df.groupby('stock_symbol').agg({'open': ['mean', 'median', 'min', 'max', 'std'], 'volume': ['mean', 'median', 'min', 'max', 'std']})

# Initialize an empty list to store candlestick traces for all companies
candlestick_traces = []

# Loop through each company and create a candlestick trace
for company in stocks['stock_symbol'].unique():
    df_company = stocks[stocks['stock_symbol'] == company]
    candlestick_trace = go.Candlestick(x=df_company['date'],
                                       open=df_company['open'],
                                       high=df_company['high'],
                                       low=df_company['low'],
                                       close=df_company['close'],
                                       name=f"{company} Candlestick")
    candlestick_traces.append(candlestick_trace)

# Create the figure
fig = go.Figure(data=candlestick_traces)

# Customize the layout
fig.update_layout(title='Stock Prices of Big Tech Stocks (2010 - 2022)<br><sup>Kaggle via Yahoo Finance | Tidy Tuesday 2023</sup>',
                  xaxis_title='Date',
                  yaxis_title='Price',
                  xaxis_rangeslider_visible=False,
                  width=1000,
                  margin=dict(l=40, r=40, t=60, b=20)
                  )

# Show the figure
fig.show()













```

## Line Plot and Bar Plot
``` {python}

stocks = companies['stock_symbol'].values.tolist()
# Creating a DataFrame to hold all the stock data
# For simplicity, let's generate some random closing prices
all_stock_data = df

# Create a Plotly figure
fig = go.Figure()

slide_stocks = ['AAPL', 'ADBE', 'AMZN', 'NFLX', 'TSLA']

# Add a line for each stock
for stock in slide_stocks:
    stock_data = df[df['stock_symbol'] == stock]
    fig.add_trace(go.Scatter(x=stock_data['date'], y=stock_data['close'], mode='lines', name=stock))

# Customize the layout
fig.update_layout(
    title='Stock Close Prices Over Time (2010 - 2022)<br><sup>Kaggle via Yahoo Finance | Tidy Tuesday 2023</sup>',
    xaxis_title='Date',
    yaxis_title='Close Price',
    height=300,
    margin=dict(l=40, r=40, t=60, b=20)
)

# Show the figure

fig.show()
```

``` {python}
# Calculate average volume traded for each stock symbol
avg_volume = df.groupby('stock_symbol')['volume'].mean().sort_values()

# Create a bar trace
bar_trace = go.Bar(
    x=avg_volume.index,  # Stock symbols
    y=avg_volume.values,  # Average volume
    marker_color='skyblue'
)

# Create a layout
layout = go.Layout(
    title='Average Volume Traded per Year for Each Stock Symbol <br><sup>Kaggle via Yahoo Finance | Tidy Tuesday 2023</sup>',
    xaxis=dict(title='Stock Symbol'),
    yaxis=dict(title='Average Volume (Shares Traded)'),
    xaxis_tickangle=-45,
    height = 300,
    margin=dict(l=40, r=40, t=60, b=20)
)

# Create a figure
fig = go.Figure(data=[bar_trace], layout=layout)

# Show the figure
fig.show()

```



## Insights


## Question 2:

## Normalized Stock Price over Time

## 50, 200 Day Moving Averages 

## Insights

## Conclusion

## Thank You!

